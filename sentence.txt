The Scala programming language captures the eye of many developers. If you take a cursory glance at Scala's Web site, you'll feel that Scala is a purely object-oriented programming language that seamlessly combines command programming with functional programming style. Christopher Diggins thinks:
Not too long ago programming language can be classified into beyond all doubt the "order type" or "function" or "object oriented". Scala represents a new breed of language that has smoothed down these artificial boundaries.
According to David Rupp in the blog, Scala is probably the next Java. Such a high evaluation can not help but see what it really is.
Scala has several key features that demonstrate its object oriented nature. For example, each value in Scala is an object, including basic data types (Boolean values, numbers, etc.), and functions are objects. In addition, classes can be overridden, and Scala provides a mixin based composition (mixin-based).
Compared with languages that support single inheritance, Scala has wider class reuse. When Scala allows you to define a new class, reuse the definition of the new member defined in a class (that is, compared to the difference in its parent class)". Scala calls it the mixin class combination.